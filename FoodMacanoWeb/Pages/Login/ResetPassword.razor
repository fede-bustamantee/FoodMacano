@page "/restablecer"
@inject FirebaseAuthService AuthService

<div class="page-container">
    <div class="reset-container">
        <div class="brand-logo">
            <img src="/img/logoo1.png" alt="" class="logo-image" />
        </div>
        <h1 class="reset-title">Restablece la contraseña</h1>
        <p class="reset-description">
            Escribe la dirección de correo electrónico vinculado a tu cuenta de Food Macano y
            te enviaremos un mensaje.
        </p>
        @if (!isEmailSent)
        {
            <div class="login-form">
                <EditForm Model="@usuario" OnValidSubmit="HandleResetPassword">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="form-group">
                        <label for="email">Correo electrónico</label>
                        <input type="email" id="email" class="form-control" @bind="usuario.Email" placeholder="Correo electrónico" />
                    </div>
                    <button type="submit" class="reset-button">
                        Enviar enlace
                    </button>
                </EditForm>
            </div>
        }
        else
        {
            <p class="success-message">Se ha enviado un correo para restablecer la contraseña. Por favor revisa tu bandeja de entrada.</p>
        }
    </div>
</div>
@code {
    private bool isEmailSent = false;

    private Usuario usuario = new Usuario();

    private async Task HandleResetPassword()
    {
        try
        {
            if (string.IsNullOrEmpty(usuario.Email))
            {
                throw new ValidationException("El correo electrónico es requerido.");
            }

            isEmailSent = await AuthService.ResetPassword(usuario.Email);
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Error al restablecer contraseña: {ex.Message}");
        }
    }
}
