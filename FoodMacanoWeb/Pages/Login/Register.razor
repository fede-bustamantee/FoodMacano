@page "/register"
@inject FirebaseAuthService AuthService
@inject IUsuarioService UsuarioService

<h3>Registro</h3>

<div class="form-group">
    <label for="email">Correo Electrónico</label>
    <input type="email" @bind="usuario.Email" class="form-control" id="email" placeholder="Ingresa tu correo electrónico">
</div>
<div class="form-group">
    <label for="password">Contraseña</label>
    <input type="password" @bind="usuario.Password" class="form-control" id="password" placeholder="Ingresa tu contraseña">
</div>
<div class="form-group">
    <label for="user">Nombre de Usuario</label>
    <input type="text" @bind="usuario.User" class="form-control" id="user" placeholder="Ingresa tu nombre de usuario">
</div>
<div class="form-group">
    <label for="tipoUsuario">Tipo de Usuario</label>
    <select @bind="usuario.TipoUsuario" class="form-control" id="tipoUsuario">
        <option value="Cliente">Cliente</option>
        <option value="Empleado">Empleado</option>
        <option value="Gerente">Gerente</option>
    </select>
</div>
<button @onclick="Registe" class="btn btn-primary">Registrarse</button>

@code {
    private Usuario usuario = new Usuario();

    private async Task Registe()
    {
        var firebaseId = await AuthService.RegisterWithEmailPassword(usuario.Email, usuario.Password);

            if (!string.IsNullOrEmpty(firebaseId))
            {
                usuario.FirebaseId = firebaseId;
                await UsuarioService.CrearUsuarioAsync(usuario);

                Navigation.NavigateTo("/login");
            }
    }
}