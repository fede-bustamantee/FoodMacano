@page "/register"
@inject FirebaseAuthService AuthService
@inject IUsuarioService UsuarioService

<div class="auth-container">
    <div class="auth-content">
        <div class="brand-logo">
            <img src="/img/logoo1.png" alt="Logo" />
        </div>
        <h1>Registrate para probar nuestros platillos</h1>

        <div class="login-form">
            <div class="form-group">
                <label for="email">Correo electrónico</label>
                <input type="email" @bind="usuario.Email" class="form-control" id="email" placeholder="Ingresa tu correo electrónico">
            </div>
            <div class="form-group">
                <label for="password">Contraseña</label>
                <input type="password" @bind="usuario.Password" class="form-control" id="password" placeholder="Ingresa tu contraseña">
            </div>
            <div class="form-group">
                <label for="user">Nombre de usuario</label>
                <input type="text" @bind="usuario.User" class="form-control" id="user" placeholder="Ingresa tu nombre de usuario">
            </div>
            <div class="form-group">
                <label for="tipoUsuario">Tipo de usuario</label>
                <select @bind="usuario.TipoUsuario" class="form-control" id="tipoUsuario">
                    <option value="Cliente">Cliente</option>
                    <option value="Empleado">Empleado</option>
                    <option value="Gerente">Gerente</option>
                </select>
            </div>
            <button @onclick="Registe" class="login-button">Registrarse</button>

            <div class="register-link">
                <span>¿Ya tienes una cuenta?</span>
                <a href="/login">Inicia sesión aquí</a>
            </div>
        </div>
    </div>
</div>

@code {
    private Usuario usuario = new Usuario();

    private async Task Registe()
    {
        var firebaseId = await AuthService.RegisterWithEmailPassword(usuario.Email, usuario.Password);

            if (!string.IsNullOrEmpty(firebaseId))
            {
                usuario.FirebaseId = firebaseId;
                await UsuarioService.CrearUsuarioAsync(usuario);

                Navigation.NavigateTo("/login");
            }
    }
}