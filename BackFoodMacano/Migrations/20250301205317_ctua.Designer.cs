// <auto-generated />
using System;
using BackFoodMacano.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackFoodMacano.Migrations
{
    [DbContext(typeof(FoodMacanoContext))]
    [Migration("20250301205317_ctua")]
    partial class ctua
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Encargue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaEncargue")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("NumeroEncargue")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("encargues");
                });

            modelBuilder.Entity("FoodMacanoServices.Models.Cart.CarritoCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("carritoCompra");
                });

            modelBuilder.Entity("FoodMacanoServices.Models.Common.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IconUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IconUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/Icons%2FIconHamburguesa.png?alt=media&token=b280cbd2-9016-4647-85e9-048858807010",
                            Nombre = "Hamburguesas"
                        },
                        new
                        {
                            Id = 2,
                            IconUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/Icons%2FIconSandwich.png?alt=media&token=dc21b284-630e-4b54-9b93-1b4668f316f2",
                            Nombre = "Sanguches"
                        },
                        new
                        {
                            Id = 3,
                            IconUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/Icons%2FIconBebidas.png?alt=media&token=c87c60a9-215c-4a8f-8939-b3423e48a1c0",
                            Nombre = "Bebidas"
                        },
                        new
                        {
                            Id = 4,
                            IconUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/Icons%2Fpizza.png?alt=media&token=fcc39a34-2c50-448a-bfa1-81a28fca2dfb",
                            Nombre = "Pizzas"
                        });
                });

            modelBuilder.Entity("FoodMacanoServices.Models.Common.Negocio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Horario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MapaIframe")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RedesSocialId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("RedesSocialId");

                    b.ToTable("negocios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Direccion = "San Martín 329, Calchaquí",
                            Horario = "Lunes a Viernes: 11:00 - 23:00\nSábado: 11:00 - 00:00\nDomingo: 11:00 - 22:00",
                            MapaIframe = "<iframe \r\n    src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d27671.94929510676!2d-60.304126219719706!3d-29.893283243730366!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x944bbec37fa30239%3A0x363b55a9e714bf24!2sCalchaqu%C3%AD%2C%20Santa%20Fe!5e0!3m2!1ses-419!2sar!4v1740862222458!5m2!1ses-419!2sar\" \r\n    width=\"100%\" \r\n    height=\"450\" \r\n    style=\"border:0;\" \r\n    allowfullscreen=\"\" \r\n    loading=\"lazy\" \r\n    referrerpolicy=\"no-referrer-when-downgrade\">\r\n</iframe>\r\n",
                            Nombre = "Food Macano, Restaurante 03",
                            RedesSocialId = 1,
                            Telefono = "3498756569"
                        });
                });

            modelBuilder.Entity("FoodMacanoServices.Models.Common.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Calidad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Calorias")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int>("DescripcionProductoId")
                        .HasColumnType("int");

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("DescripcionProductoId")
                        .IsUnique();

                    b.ToTable("productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Calidad = "Alta",
                            Calorias = 550,
                            CategoriaId = 1,
                            DescripcionProductoId = 1,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FHamburguesa%2Fhabur.png?alt=media&token=036cfd9a-89b9-44a0-b97f-c87af5398706",
                            Nombre = "Hamburguesa Clásica",
                            Precio = 4200
                        },
                        new
                        {
                            Id = 2,
                            Calidad = "Premium",
                            Calorias = 800,
                            CategoriaId = 1,
                            DescripcionProductoId = 2,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FHamburguesa%2FHaburquesoo.png?alt=media&token=21d2b902-5f75-49cb-aa0d-7b91555ab1b3",
                            Nombre = "Hamburguesa Doble Bacon",
                            Precio = 5500
                        },
                        new
                        {
                            Id = 3,
                            Calidad = "Premium",
                            Calorias = 720,
                            CategoriaId = 1,
                            DescripcionProductoId = 3,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FHamburguesa%2Fhamurchedarr.png?alt=media&token=a6716fc2-965a-4b63-9e06-16ef5b3e194f",
                            Nombre = "Hamburguesa Angus",
                            Precio = 6300
                        },
                        new
                        {
                            Id = 4,
                            Calidad = "Alta",
                            Calorias = 680,
                            CategoriaId = 1,
                            DescripcionProductoId = 4,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FHamburguesa%2Fhabur.png?alt=media&token=036cfd9a-89b9-44a0-b97f-c87af5398706",
                            Nombre = "Hamburguesa Mexicana",
                            Precio = 5800
                        },
                        new
                        {
                            Id = 5,
                            Calidad = "Premium",
                            Calorias = 750,
                            CategoriaId = 1,
                            DescripcionProductoId = 5,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FHamburguesa%2FHaburquesoo.png?alt=media&token=21d2b902-5f75-49cb-aa0d-7b91555ab1b3",
                            Nombre = "Hamburguesa Gourmet",
                            Precio = 7900
                        },
                        new
                        {
                            Id = 6,
                            Calidad = "Alta",
                            Calorias = 600,
                            CategoriaId = 2,
                            DescripcionProductoId = 6,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FSanguches%2Fmila.png?alt=media&token=9fc4685f-2fd1-41cb-a707-bfe7b35e4bb5",
                            Nombre = "Sándwich de Milanesa Completo",
                            Precio = 4700
                        },
                        new
                        {
                            Id = 7,
                            Calidad = "Premium",
                            Calorias = 720,
                            CategoriaId = 2,
                            DescripcionProductoId = 7,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FSanguches%2Fmilaquee.png?alt=media&token=46ea6c8d-fe58-469f-9c4e-0646cdaa5a4f",
                            Nombre = "Sándwich de Lomito Premium",
                            Precio = 6800
                        },
                        new
                        {
                            Id = 8,
                            Calidad = "Alta",
                            Calorias = 590,
                            CategoriaId = 2,
                            DescripcionProductoId = 8,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FSanguches%2Fmilaeslomm.png?alt=media&token=5312dcbb-3365-40e3-87d1-92ce5ce7056c",
                            Nombre = "Sándwich Milanesa con Queso",
                            Precio = 5100
                        },
                        new
                        {
                            Id = 9,
                            Calidad = "Alta",
                            Calorias = 650,
                            CategoriaId = 2,
                            DescripcionProductoId = 9,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FSanguches%2Fmila.png?alt=media&token=9fc4685f-2fd1-41cb-a707-bfe7b35e4bb5",
                            Nombre = "Sándwich Club",
                            Precio = 5600
                        },
                        new
                        {
                            Id = 10,
                            Calidad = "Premium",
                            Calorias = 780,
                            CategoriaId = 2,
                            DescripcionProductoId = 10,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FSanguches%2Fmilaquee.png?alt=media&token=46ea6c8d-fe58-469f-9c4e-0646cdaa5a4f",
                            Nombre = "Sándwich de Lomo Completo",
                            Precio = 7200
                        },
                        new
                        {
                            Id = 11,
                            Calidad = "Alta",
                            Calorias = 0,
                            CategoriaId = 3,
                            DescripcionProductoId = 11,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FBebidas%2Fcocaa.png?alt=media&token=46e172b8-a890-49dc-b2d6-841e327c6fda",
                            Nombre = "Agua Mineral 500ml",
                            Precio = 4100
                        },
                        new
                        {
                            Id = 12,
                            Calidad = "Alta",
                            Calorias = 210,
                            CategoriaId = 3,
                            DescripcionProductoId = 12,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FBebidas%2Faguaa.png?alt=media&token=b9677456-0259-47c6-91ec-8f33136c9ab8",
                            Nombre = "Coca-Cola 500ml",
                            Precio = 4300
                        },
                        new
                        {
                            Id = 13,
                            Calidad = "Premium",
                            Calorias = 180,
                            CategoriaId = 3,
                            DescripcionProductoId = 13,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FBebidas%2Fcoptell.png?alt=media&token=4b440890-37ca-4bae-aadc-3e8656d22940",
                            Nombre = "Cóctel Especial",
                            Precio = 5800
                        },
                        new
                        {
                            Id = 14,
                            Calidad = "Alta",
                            Calorias = 120,
                            CategoriaId = 3,
                            DescripcionProductoId = 14,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FBebidas%2Fcocaa.png?alt=media&token=46e172b8-a890-49dc-b2d6-841e327c6fda",
                            Nombre = "Limonada Casera",
                            Precio = 4600
                        },
                        new
                        {
                            Id = 15,
                            Calidad = "Alta",
                            Calorias = 200,
                            CategoriaId = 3,
                            DescripcionProductoId = 15,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FBebidas%2Faguaa.png?alt=media&token=b9677456-0259-47c6-91ec-8f33136c9ab8",
                            Nombre = "Smoothie de Frutas",
                            Precio = 4900
                        },
                        new
                        {
                            Id = 16,
                            Calidad = "Alta",
                            Calorias = 850,
                            CategoriaId = 4,
                            DescripcionProductoId = 16,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FPizas%2Fpizamitaa.png?alt=media&token=c0a6c4ba-d232-4fe6-9ce7-f8d9a21ffdaa",
                            Nombre = "Pizza Muzzarella",
                            Precio = 5200
                        },
                        new
                        {
                            Id = 17,
                            Calidad = "Alta",
                            Calorias = 920,
                            CategoriaId = 4,
                            DescripcionProductoId = 17,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FPizas%2Fpizappp.png?alt=media&token=d2d21eb8-bd62-4593-a64c-dfe2b5676244",
                            Nombre = "Pizza Pepperoni",
                            Precio = 6100
                        },
                        new
                        {
                            Id = 18,
                            Calidad = "Premium",
                            Calorias = 980,
                            CategoriaId = 4,
                            DescripcionProductoId = 18,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FPizas%2Fpizas.png?alt=media&token=6e337a8e-bf33-40db-ba97-02c1c0e3ef7c",
                            Nombre = "Pizza Cuatro Quesos",
                            Precio = 6800
                        },
                        new
                        {
                            Id = 19,
                            Calidad = "Alta",
                            Calorias = 880,
                            CategoriaId = 4,
                            DescripcionProductoId = 19,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FPizas%2Fpizamitaa.png?alt=media&token=c0a6c4ba-d232-4fe6-9ce7-f8d9a21ffdaa",
                            Nombre = "Pizza Napolitana",
                            Precio = 5700
                        },
                        new
                        {
                            Id = 20,
                            Calidad = "Premium",
                            Calorias = 1050,
                            CategoriaId = 4,
                            DescripcionProductoId = 20,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FPizas%2Fpizappp.png?alt=media&token=d2d21eb8-bd62-4593-a64c-dfe2b5676244",
                            Nombre = "Pizza Especial",
                            Precio = 7500
                        });
                });

            modelBuilder.Entity("FoodMacanoServices.Models.Common.RedesSocial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Facebook")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Instagram")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Whatsapp")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("redesSociales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Facebook = "https://www.facebook.com",
                            Instagram = "https://www.instagram.com",
                            Whatsapp = "https://wa.me/543498409675"
                        });
                });

            modelBuilder.Entity("FoodMacanoServices.Models.DescripcionProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescripcionCorta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DescripcionLarga")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("descripcionProductos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DescripcionCorta = "Hamburguesa clásica con carne premium y vegetales frescos",
                            DescripcionLarga = "Deliciosa hamburguesa de carne a la parrilla con queso cheddar, lechuga fresca, tomate jugoso y nuestra salsa especial en un pan suave y tostado."
                        },
                        new
                        {
                            Id = 2,
                            DescripcionCorta = "Hamburguesa doble con bacon y queso",
                            DescripcionLarga = "Hamburguesa doble carne, doble queso y tiras de bacon crujiente. Acompañada de cebolla caramelizada y salsa barbacoa casera."
                        },
                        new
                        {
                            Id = 3,
                            DescripcionCorta = "Hamburguesa de carne Angus con cheddar",
                            DescripcionLarga = "Jugosa hamburguesa de carne Angus premium con queso cheddar derretido, pepinillos, cebolla y salsa especial de la casa."
                        },
                        new
                        {
                            Id = 4,
                            DescripcionCorta = "Hamburguesa mexicana picante",
                            DescripcionLarga = "Hamburguesa con carne sazonada con especias mexicanas, jalapeños, guacamole, queso pepper jack y salsa picante casera."
                        },
                        new
                        {
                            Id = 5,
                            DescripcionCorta = "Hamburguesa gourmet con queso azul",
                            DescripcionLarga = "Hamburguesa gourmet de carne Angus, queso azul, cebolla caramelizada, rúcula fresca y reducción de vino tinto en pan brioche."
                        },
                        new
                        {
                            Id = 6,
                            DescripcionCorta = "Sándwich de milanesa completo",
                            DescripcionLarga = "Sándwich de milanesa de ternera con lechuga, tomate, queso, jamón y mayonesa en pan francés crujiente."
                        },
                        new
                        {
                            Id = 7,
                            DescripcionCorta = "Sándwich de lomito premium",
                            DescripcionLarga = "Sándwich de lomito completo con lechuga, tomate, jamón, queso, huevo frito y mayonesa en pan ciabatta."
                        },
                        new
                        {
                            Id = 8,
                            DescripcionCorta = "Sándwich de milanesa con queso",
                            DescripcionLarga = "Sándwich de milanesa con queso derretido, lechuga fresca, tomate y salsa tártara casera en pan de campo."
                        },
                        new
                        {
                            Id = 9,
                            DescripcionCorta = "Sándwich club premium",
                            DescripcionLarga = "Sándwich club de tres pisos con pollo grillado, bacon crujiente, huevo, lechuga, tomate y mayonesa casera."
                        },
                        new
                        {
                            Id = 10,
                            DescripcionCorta = "Sándwich de lomo completo",
                            DescripcionLarga = "Sándwich de lomo completo con queso derretido, huevo frito, jamón, lechuga, tomate y salsa especial en pan ciabatta."
                        },
                        new
                        {
                            Id = 11,
                            DescripcionCorta = "Agua mineral sin gas 500ml",
                            DescripcionLarga = "Agua mineral natural sin gas en botella de 500ml. Hidratación pura y refrescante."
                        },
                        new
                        {
                            Id = 12,
                            DescripcionCorta = "Coca-Cola original 500ml",
                            DescripcionLarga = "Refrescante Coca-Cola clásica en botella de 500ml. El sabor de siempre para acompañar tu comida."
                        },
                        new
                        {
                            Id = 13,
                            DescripcionCorta = "Cóctel especial de la casa",
                            DescripcionLarga = "Cóctel exclusivo preparado con frutas frescas, licores premium y un toque secreto que lo hace único. Servido en vaso de 350ml."
                        },
                        new
                        {
                            Id = 14,
                            DescripcionCorta = "Limonada casera con menta",
                            DescripcionLarga = "Limonada casera preparada con limones frescos, un toque de menta y endulzada con miel. Bebida refrescante de 500ml."
                        },
                        new
                        {
                            Id = 15,
                            DescripcionCorta = "Hamburguesa de carne a la parrilla con queso, lechuga, tomate y mayonesa.Hamburguesa de carne a la parrilla con queso, lechuga, tomate y mayonesa.Hamburguesa de carne a la parrilla con queso, lechuga, tomate y mayonesa.Hamburguesa de carne a la parrilla con queso, lechuga, tomate y mayonesa.Hamburguesa de carne a la parrilla con queso, lechuga, tomate y mayonesa.Hamburguesa de carne a la parrilla con queso, lechuga, tomate y mayonesa.",
                            DescripcionLarga = "Smoothie natural de frutas mixtas (frutilla, banana y naranja) sin azúcar añadida. Vaso de 400ml."
                        },
                        new
                        {
                            Id = 16,
                            DescripcionCorta = "Pizza Muzzarella tradicional",
                            DescripcionLarga = "Pizza con abundante queso muzzarella, salsa de tomate casera y orégano fresco. Masa a la piedra crujiente por fuera y tierna por dentro."
                        },
                        new
                        {
                            Id = 17,
                            DescripcionCorta = "Pizza Pepperoni",
                            DescripcionLarga = "Pizza con salsa de tomate, queso muzzarella y generosa cantidad de pepperoni picante. Una combinación clásica y deliciosa."
                        },
                        new
                        {
                            Id = 18,
                            DescripcionCorta = "Pizza Cuatro Quesos",
                            DescripcionLarga = "Pizza gourmet con selección de cuatro quesos: muzzarella, provolone, parmesano y queso azul. Una explosión de sabores para los amantes del queso."
                        },
                        new
                        {
                            Id = 19,
                            DescripcionCorta = "Pizza Napolitana",
                            DescripcionLarga = "Pizza clásica napolitana con salsa de tomate, muzzarella, rodajas de tomate fresco, ajo y albahaca. Un homenaje a la tradición italiana."
                        },
                        new
                        {
                            Id = 20,
                            DescripcionCorta = "Pizza Especial de la Casa",
                            DescripcionLarga = "Pizza con salsa de tomate, muzzarella, jamón, morrones, aceitunas, huevo y orégano. La especialidad más completa y sabrosa."
                        });
                });

            modelBuilder.Entity("FoodMacanoServices.Models.DesktopEncargue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEncargue")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroMesa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("desktopEncargues");
                });

            modelBuilder.Entity("FoodMacanoServices.Models.Orders.EncargueDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("EncargueId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EncargueId");

                    b.HasIndex("ProductoId");

                    b.ToTable("encargueDetalles");
                });

            modelBuilder.Entity("FoodMacanoServices.Models.Orders.MauiEncargue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaEncargue")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("UserDisplayName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("mauiEncargue");
                });

            modelBuilder.Entity("FoodMacanoServices.Models.Orders.MauiEncargueDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("EncargueId")
                        .HasColumnType("int");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EncargueId");

                    b.HasIndex("ProductoId");

                    b.ToTable("MauiEncargueDetalle");
                });

            modelBuilder.Entity("FoodMacanoServices.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirebaseId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("Encargue", b =>
                {
                    b.HasOne("FoodMacanoServices.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FoodMacanoServices.Models.Cart.CarritoCompra", b =>
                {
                    b.HasOne("FoodMacanoServices.Models.Common.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodMacanoServices.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FoodMacanoServices.Models.Common.Negocio", b =>
                {
                    b.HasOne("FoodMacanoServices.Models.Common.RedesSocial", "RedesSocial")
                        .WithMany()
                        .HasForeignKey("RedesSocialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RedesSocial");
                });

            modelBuilder.Entity("FoodMacanoServices.Models.Common.Producto", b =>
                {
                    b.HasOne("FoodMacanoServices.Models.Common.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodMacanoServices.Models.DescripcionProducto", "DescripcionProducto")
                        .WithOne("Producto")
                        .HasForeignKey("FoodMacanoServices.Models.Common.Producto", "DescripcionProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("DescripcionProducto");
                });

            modelBuilder.Entity("FoodMacanoServices.Models.Orders.EncargueDetalle", b =>
                {
                    b.HasOne("Encargue", "Encargue")
                        .WithMany("EncargueDetalles")
                        .HasForeignKey("EncargueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodMacanoServices.Models.Common.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Encargue");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("FoodMacanoServices.Models.Orders.MauiEncargueDetalle", b =>
                {
                    b.HasOne("FoodMacanoServices.Models.Orders.MauiEncargue", "Encargue")
                        .WithMany("Detalles")
                        .HasForeignKey("EncargueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodMacanoServices.Models.Common.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Encargue");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Encargue", b =>
                {
                    b.Navigation("EncargueDetalles");
                });

            modelBuilder.Entity("FoodMacanoServices.Models.Common.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("FoodMacanoServices.Models.DescripcionProducto", b =>
                {
                    b.Navigation("Producto");
                });

            modelBuilder.Entity("FoodMacanoServices.Models.Orders.MauiEncargue", b =>
                {
                    b.Navigation("Detalles");
                });
#pragma warning restore 612, 618
        }
    }
}
