// <auto-generated />
using System;
using BackFoodMacano.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackFoodMacano.Migrations
{
    [DbContext(typeof(FoodMacanoContext))]
    partial class FoodMacanoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Encargue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEncargue")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("NumeroEncargue")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("encargues");
                });

            modelBuilder.Entity("FoodMacanoServices.Models.CarritoCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("carritoCompra");
                });

            modelBuilder.Entity("FoodMacanoServices.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IconUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IconUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/Icons%2FIconHamburguesa.png?alt=media&token=b280cbd2-9016-4647-85e9-048858807010",
                            Nombre = "Hamburguesas"
                        },
                        new
                        {
                            Id = 2,
                            IconUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/Icons%2FIconSandwich.png?alt=media&token=dc21b284-630e-4b54-9b93-1b4668f316f2",
                            Nombre = "Sanguches"
                        },
                        new
                        {
                            Id = 3,
                            IconUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/Icons%2FIconBebidas.png?alt=media&token=c87c60a9-215c-4a8f-8939-b3423e48a1c0",
                            Nombre = "Bebidas"
                        });
                });

            modelBuilder.Entity("FoodMacanoServices.Models.DescripcionProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescripcionCorta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DescripcionLarga")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("descripcionProductos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DescripcionCorta = "Hamburguesa clásica de carne a la parrilla",
                            DescripcionLarga = "Deliciosa hamburguesa de carne a la parrilla con queso cheddar, lechuga fresca, tomate jugoso y nuestra salsa especial en un pan suave y tostado."
                        },
                        new
                        {
                            Id = 2,
                            DescripcionCorta = "Hamburguesa doble con bacon",
                            DescripcionLarga = "Hamburguesa doble carne, doble queso y tiras de bacon crujiente. Acompañada de cebolla caramelizada y salsa barbacoa casera."
                        },
                        new
                        {
                            Id = 3,
                            DescripcionCorta = "Hamburguesa vegetariana",
                            DescripcionLarga = "Hamburguesa vegetariana a base de lentejas y vegetales, con queso provolone, rúcula y tomates secos. Opción saludable y deliciosa."
                        },
                        new
                        {
                            Id = 4,
                            DescripcionCorta = "Hamburguesa de pollo",
                            DescripcionLarga = "Jugosa hamburguesa de pollo a la parrilla con aguacate, lechuga y mayonesa de chipotle en pan integral."
                        },
                        new
                        {
                            Id = 5,
                            DescripcionCorta = "Hamburguesa gourmet",
                            DescripcionLarga = "Hamburguesa gourmet de carne Angus, queso azul, cebolla caramelizada y reducción de vino tinto en pan brioche."
                        },
                        new
                        {
                            Id = 6,
                            DescripcionCorta = "Sándwich de milanesa clásico",
                            DescripcionLarga = "Sándwich de milanesa de ternera con lechuga, tomate, queso y mayonesa en pan francés crujiente."
                        },
                        new
                        {
                            Id = 7,
                            DescripcionCorta = "Sándwich de jamón y queso",
                            DescripcionLarga = "Sándwich caliente de jamón y queso derretido en pan de miga tostado. Un clásico irresistible."
                        },
                        new
                        {
                            Id = 8,
                            DescripcionCorta = "Sándwich de pollo",
                            DescripcionLarga = "Sándwich de pechuga de pollo a la plancha con palta, tomate y lechuga en pan integral."
                        },
                        new
                        {
                            Id = 9,
                            DescripcionCorta = "Sándwich vegetariano",
                            DescripcionLarga = "Sándwich vegetariano con hummus, vegetales asados, queso de cabra y rúcula en pan de centeno."
                        },
                        new
                        {
                            Id = 10,
                            DescripcionCorta = "Sándwich de lomito",
                            DescripcionLarga = "Sándwich de lomito completo con lechuga, tomate, jamón, queso, huevo frito y mayonesa en pan ciabatta."
                        },
                        new
                        {
                            Id = 11,
                            DescripcionCorta = "Coca-Cola",
                            DescripcionLarga = "Refrescante Coca-Cola clásica en botella de 500ml. El sabor de siempre para acompañar tu comida."
                        },
                        new
                        {
                            Id = 12,
                            DescripcionCorta = "Agua mineral",
                            DescripcionLarga = "Agua mineral natural sin gas en botella de 500ml. Hidratación pura y refrescante."
                        },
                        new
                        {
                            Id = 13,
                            DescripcionCorta = "Limonada casera",
                            DescripcionLarga = "Limonada casera preparada con limones frescos, un toque de menta y endulzada con miel. Bebida refrescante de 500ml."
                        },
                        new
                        {
                            Id = 14,
                            DescripcionCorta = "Cerveza artesanal",
                            DescripcionLarga = "Cerveza artesanal tipo IPA en botella de 330ml. Sabor intenso y aromático con notas cítricas y tropicales."
                        },
                        new
                        {
                            Id = 15,
                            DescripcionCorta = "Hamburguesa de carne a la parrilla con queso, lechuga, tomate y mayonesa.Hamburguesa de carne a la parrilla con queso, lechuga, tomate y mayonesa.Hamburguesa de carne a la parrilla con queso, lechuga, tomate y mayonesa.Hamburguesa de carne a la parrilla con queso, lechuga, tomate y mayonesa.Hamburguesa de carne a la parrilla con queso, lechuga, tomate y mayonesa.Hamburguesa de carne a la parrilla con queso, lechuga, tomate y mayonesa.",
                            DescripcionLarga = "Smoothie natural de frutas mixtas (frutilla, banana y naranja) sin azúcar añadida. Vaso de 400ml."
                        });
                });

            modelBuilder.Entity("FoodMacanoServices.Models.DesktopEncargue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEncargue")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroMesa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("desktopEncargues");
                });

            modelBuilder.Entity("FoodMacanoServices.Models.MauiEncargue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaEncargue")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("UserDisplayName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("mauiEncargue");
                });

            modelBuilder.Entity("FoodMacanoServices.Models.MauiEncargueDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("EncargueId")
                        .HasColumnType("int");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EncargueId");

                    b.HasIndex("ProductoId");

                    b.ToTable("MauiEncargueDetalle");
                });

            modelBuilder.Entity("FoodMacanoServices.Models.Negocio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Horario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MapaIframe")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RedesSocialId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("RedesSocialId");

                    b.ToTable("negocios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Direccion = "Calle Falsa 123, Ciudad Ejemplo",
                            Horario = "Lunes a Viernes: 11:00 - 23:00\nSábado: 11:00 - 00:00\nDomingo: 11:00 - 22:00",
                            MapaIframe = "<iframe class=\"map\" src=\"https://www.google.com/maps/place/Gdor.+Crespo,+Santa+Fe/@-30.3611856,-60.4003288,16z/data=!4m6!3m5!1s0x944b0554d0eb3903:0x7b078fba72f704b!8m2!3d-30.3620638!4d-60.4020713!16s%2Fg%2F120y82vp?entry=ttu&g_ep=EgoyMDI1MDEyOC4wIKXMDSoASAFQAw%3D%3D\" style=\"border:0;\" allowfullscreen=\"\" loading=\"lazy\" referrerpolicy=\"no-referrer-when-downgrade\"></iframe>",
                            Nombre = "Food Macano",
                            RedesSocialId = 1,
                            Telefono = "123456789"
                        });
                });

            modelBuilder.Entity("FoodMacanoServices.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Calidad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Calorias")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int>("DescripcionProductoId")
                        .HasColumnType("int");

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("DescripcionProductoId")
                        .IsUnique();

                    b.ToTable("productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Calidad = "Alta",
                            Calorias = 550,
                            CategoriaId = 1,
                            DescripcionProductoId = 1,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FHambuerguesa.png?alt=media&token=03b62ad8-16e4-4b06-b595-28baf10de9a7",
                            Nombre = "Hamburguesa Clásica",
                            Precio = 500
                        },
                        new
                        {
                            Id = 2,
                            Calidad = "Alta",
                            Calorias = 800,
                            CategoriaId = 1,
                            DescripcionProductoId = 2,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FMilanesa.png?alt=media&token=89683de5-6f3d-4a17-be75-be0640e5906b",
                            Nombre = "Hamburguesa Doble Bacon",
                            Precio = 650
                        },
                        new
                        {
                            Id = 3,
                            Calidad = "Media",
                            Calorias = 400,
                            CategoriaId = 1,
                            DescripcionProductoId = 3,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FPiza.png?alt=media&token=d52e606d-597c-4065-aed3-9ae33e633ab8",
                            Nombre = "Hamburguesa Vegetariana",
                            Precio = 450
                        },
                        new
                        {
                            Id = 4,
                            Calidad = "Media",
                            Calorias = 450,
                            CategoriaId = 1,
                            DescripcionProductoId = 4,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FHambuerguesa.png?alt=media&token=03b62ad8-16e4-4b06-b595-28baf10de9a7",
                            Nombre = "Hamburguesa de Pollo",
                            Precio = 480
                        },
                        new
                        {
                            Id = 5,
                            Calidad = "Premium",
                            Calorias = 700,
                            CategoriaId = 1,
                            DescripcionProductoId = 5,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FMilanesa.png?alt=media&token=89683de5-6f3d-4a17-be75-be0640e5906b",
                            Nombre = "Hamburguesa Gourmet",
                            Precio = 750
                        },
                        new
                        {
                            Id = 6,
                            Calidad = "Media",
                            Calorias = 600,
                            CategoriaId = 2,
                            DescripcionProductoId = 6,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FPiza.png?alt=media&token=d52e606d-597c-4065-aed3-9ae33e633ab8",
                            Nombre = "Sándwich de Milanesa",
                            Precio = 450
                        },
                        new
                        {
                            Id = 7,
                            Calidad = "Media",
                            Calorias = 400,
                            CategoriaId = 2,
                            DescripcionProductoId = 7,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FHambuerguesa.png?alt=media&token=03b62ad8-16e4-4b06-b595-28baf10de9a7",
                            Nombre = "Sándwich Jamón y Queso",
                            Precio = 350
                        },
                        new
                        {
                            Id = 8,
                            Calidad = "Alta",
                            Calorias = 450,
                            CategoriaId = 2,
                            DescripcionProductoId = 8,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FMilanesa.png?alt=media&token=89683de5-6f3d-4a17-be75-be0640e5906b",
                            Nombre = "Sándwich de Pollo",
                            Precio = 400
                        },
                        new
                        {
                            Id = 9,
                            Calidad = "Alta",
                            Calorias = 350,
                            CategoriaId = 2,
                            DescripcionProductoId = 9,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FPiza.png?alt=media&token=d52e606d-597c-4065-aed3-9ae33e633ab8",
                            Nombre = "Sándwich Vegetariano",
                            Precio = 380
                        },
                        new
                        {
                            Id = 10,
                            Calidad = "Premium",
                            Calorias = 700,
                            CategoriaId = 2,
                            DescripcionProductoId = 10,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FHambuerguesa.png?alt=media&token=03b62ad8-16e4-4b06-b595-28baf10de9a7",
                            Nombre = "Sándwich de Lomito",
                            Precio = 550
                        },
                        new
                        {
                            Id = 11,
                            Calidad = "Alta",
                            Calorias = 210,
                            CategoriaId = 3,
                            DescripcionProductoId = 11,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FMilanesa.png?alt=media&token=89683de5-6f3d-4a17-be75-be0640e5906b",
                            Nombre = "Coca-Cola 500ml",
                            Precio = 150
                        },
                        new
                        {
                            Id = 12,
                            Calidad = "Alta",
                            Calorias = 0,
                            CategoriaId = 3,
                            DescripcionProductoId = 12,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FPiza.png?alt=media&token=d52e606d-597c-4065-aed3-9ae33e633ab8",
                            Nombre = "Agua Mineral 500ml",
                            Precio = 100
                        },
                        new
                        {
                            Id = 13,
                            Calidad = "Alta",
                            Calorias = 120,
                            CategoriaId = 3,
                            DescripcionProductoId = 13,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FHambuerguesa.png?alt=media&token=03b62ad8-16e4-4b06-b595-28baf10de9a7",
                            Nombre = "Limonada Casera 500ml",
                            Precio = 200
                        },
                        new
                        {
                            Id = 14,
                            Calidad = "Premium",
                            Calorias = 180,
                            CategoriaId = 3,
                            DescripcionProductoId = 14,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FMilanesa.png?alt=media&token=89683de5-6f3d-4a17-be75-be0640e5906b",
                            Nombre = "Cerveza Artesanal IPA 330ml",
                            Precio = 300
                        },
                        new
                        {
                            Id = 15,
                            Calidad = "Alta",
                            Calorias = 200,
                            CategoriaId = 3,
                            DescripcionProductoId = 15,
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/foodmacano.appspot.com/o/img%2FPiza.png?alt=media&token=d52e606d-597c-4065-aed3-9ae33e633ab8",
                            Nombre = "Smoothie de Frutas 400ml",
                            Precio = 250
                        });
                });

            modelBuilder.Entity("FoodMacanoServices.Models.RedesSocial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Facebook")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Instagram")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Whatsapp")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("redesSociales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Facebook = "https://www.facebook.com",
                            Instagram = "https://www.instagram.com",
                            Whatsapp = "https://wa.me/543498409675"
                        });
                });

            modelBuilder.Entity("FoodMacanoServices.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirebaseId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("Encargue", b =>
                {
                    b.HasOne("FoodMacanoServices.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodMacanoServices.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FoodMacanoServices.Models.CarritoCompra", b =>
                {
                    b.HasOne("FoodMacanoServices.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodMacanoServices.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FoodMacanoServices.Models.MauiEncargueDetalle", b =>
                {
                    b.HasOne("FoodMacanoServices.Models.MauiEncargue", "Encargue")
                        .WithMany("Detalles")
                        .HasForeignKey("EncargueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodMacanoServices.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Encargue");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("FoodMacanoServices.Models.Negocio", b =>
                {
                    b.HasOne("FoodMacanoServices.Models.RedesSocial", "RedesSocial")
                        .WithMany()
                        .HasForeignKey("RedesSocialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RedesSocial");
                });

            modelBuilder.Entity("FoodMacanoServices.Models.Producto", b =>
                {
                    b.HasOne("FoodMacanoServices.Models.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodMacanoServices.Models.DescripcionProducto", "DescripcionProducto")
                        .WithOne("Producto")
                        .HasForeignKey("FoodMacanoServices.Models.Producto", "DescripcionProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("DescripcionProducto");
                });

            modelBuilder.Entity("FoodMacanoServices.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("FoodMacanoServices.Models.DescripcionProducto", b =>
                {
                    b.Navigation("Producto");
                });

            modelBuilder.Entity("FoodMacanoServices.Models.MauiEncargue", b =>
                {
                    b.Navigation("Detalles");
                });
#pragma warning restore 612, 618
        }
    }
}
